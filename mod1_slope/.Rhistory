window <- 9
center <- 10
start <- center-window
end <- center+window
mem_sub <- mem_sim[start:end]
nomem_sub <- nomem_sim[start:end]
mem_lm <- lm(mem_sub~seq(start:end))
nomem_lm <- lm(nomem_sub~seq(start:end))
mem_lm
nomem_lm
# This is the server logic for a Shiny web application.
# You can find out more about building applications with Shiny here:
#
# http://www.rstudio.com/shiny/
#
library(shiny)
##Generates two time-series: one with memory, one without.
int <- 0.5
slope <- 0.01
n <- 20000
mem_sim <- int+slope*seq(1:n)+arima.sim(n = n,
model=list(ar = c(1, -0.1858), ma = c(-0.2279, 0.2488)),
rand.gen = function(n, ...) sqrt(0.1796) * rt(n, df = 5))
nomem_sim <- int+slope*seq(1:n)+arima.sim(n=n,model=list())
par(mfrow=c(2,1))
ts.plot(nomem_series)
ts.plot(mem_series)
##Subsets the data and fits a regression to an interval.
window <- 9
center <- 10
start <- center-window
end <- center+window
mem_sub <- mem_sim[start:end]
nomem_sub <- nomem_sim[start:end]
mem_lm <- lm(mem_sub~seq(start:end))
nomem_lm <- lm(nomem_sub~seq(start:end))
mem_lm
nomem_lm
int <- 0.5
slope <- 0.01
n <- 200
mem_sim <- int+slope*seq(1:n)+arima.sim(n = n,
model=list(ar = c(1, -0.1858), ma = c(-0.2279, 0.2488)),
rand.gen = function(n, ...) sqrt(0.1796) * rt(n, df = 5))
nomem_sim <- int+slope*seq(1:n)+arima.sim(n=n,model=list())
par(mfrow=c(2,1))
ts.plot(nomem_series)
ts.plot(mem_series)
ts.plot(mem_sim)
polygon(x=c(start,end,rev(start,end)),y=c(rep(min(mem_sub),2),rep(max(mem_sub),2)))
polygon(x=c(start,end,rev(c(start,end)),y=c(rep(min(mem_sub),2),rep(max(mem_sub),2)))
polygon(x=c(start,end,rev(start,end)),y=c(rep(min(mem_sub),2),rep(max(mem_sub),2)))
polygon(x=c(start,end,rev(start,end)),y=c(rep(min(mem_sub),2),rep(max(mem_sub),2)))
polygon(x=c(start,end,rev(c(start,end))),y=c(rep(min(mem_sub),2),rep(max(mem_sub),2)))
polygon(x=c(start,end,rev(c(start,end))),y=c(rep(ymin,2),rep(ymax,2)))
ymin <- min(mem_sub) - 20
ymax <- max(mem_sub) + 20
ts.plot(mem_sim)
polygon(x=c(start,end,rev(c(start,end))),y=c(rep(ymin,2),rep(ymax,2)))
polygon(x=c(start,end,rev(c(start,end))),y=c(rep(ymin,2),rep(ymax,2)),fill=rgb(0.5,0.5,0.5,0.5))
polygon(x=c(start,end,rev(c(start,end))),y=c(rep(ymin,2),rep(ymax,2)),bg=rgb(0.5,0.5,0.5,0.5))
?polygon
polygon(x=c(start,end,rev(c(start,end))),y=c(rep(ymin,2),rep(ymax,2)),col=rgb(0.5,0.5,0.5,0.5))
polygon(x=c(start,end,rev(c(start,end))),y=c(rep(ymin,2),rep(ymax,2)),col=rgb(0.5,0.5,0.5,0.5),col=NA)
ymin <- min(mem_sub) - 20
ymax <- max(mem_sub) + 20
ts.plot(mem_sim)
polygon(x=c(start,end,rev(c(start,end))),
y=c(rep(ymin,2),rep(ymax,2)),
col=rgb(0.5,0.5,0.5,0.5),border=NA)
abline(mem_lm,lty=2)
##Subsets the data and fits a regression to an interval.
window <- 9
center <- 30
start <- center-window
end <- center+window
mem_sub <- mem_sim[start:end]
nomem_sub <- nomem_sim[start:end]
mem_lm <- lm(mem_sub~seq(start:end))
nomem_lm <- lm(nomem_sub~seq(start:end))
ymin <- min(mem_sub) - 20
ymax <- max(mem_sub) + 20
ts.plot(mem_sim)
polygon(x=c(start,end,rev(c(start,end))),
y=c(rep(ymin,2),rep(ymax,2)),
col=rgb(0.5,0.5,0.5,0.5),border=NA)
abline(mem_lm,lty=2)
ts.plot(nomem_sim)
plotfun <- function(series,window,center){
##subsets and computes the regression.
start <- center-window
end <- center+window
mem_sub <- series[start:end]
mem_lm <- lm(series~seq(start:end))
##creates the plot
ymin <- min(mem_sub) - 20
ymax <- max(mem_sub) + 20
ts.plot(mem_sim)
polygon(x=c(start,end,rev(c(start,end))),
y=c(rep(ymin,2),rep(ymax,2)),
col=rgb(0.5,0.5,0.5,0.5),border=NA)
abline(mem_lm,lty=2)
}
plotfun(mem_sim,30,200)
plotfun(mem_sim,29,200)
plotfun(mem_sim,30,200)
plotfun(mem_sim,30,200)
plotfun <- function(series,window,center){
##subsets and computes the regression.
start <- center-window
end <- center+window
sub <- series[start:end]
sub_lm <- lm(sub~seq(start:end))
##creates the plot
ymin <- min(sub) - 20
ymax <- max(sub) + 20
ts.plot(mem_sim)
polygon(x=c(start,end,rev(c(start,end))),
y=c(rep(ymin,2),rep(ymax,2)),
col=rgb(0.5,0.5,0.5,0.5),border=NA)
abline(sub_lm,lty=2)
}
plotfun(mem_sim,window=20,center=230)
plotfun(mem_sim,window=20,center=100)
par(mfrow=c(1,1))
plotfun <- function(series,window,center){
##subsets and computes the regression.
start <- center-window
end <- center+window
sub <- series[start:end]
sub_lm <- lm(sub~seq(start:end))
##creates the plot
ymin <- min(sub) - 20
ymax <- max(sub) + 20
ts.plot(mem_sim)
polygon(x=c(start,end,rev(c(start,end))),
y=c(rep(ymin,2),rep(ymax,2)),
col=rgb(0.5,0.5,0.5,0.5),border=NA)
abline(sub_lm,lty=2)
}
plotfun(mem_sim,window=20,center=100)
plotfun <- function(series,window,center){
##subsets and computes the regression.
start <- center-window
end <- center+window
sub <- series[start:end]
sub_lm <- lm(sub~seq(start:end))
##creates the plot
ymin <- min(sub) - 20
ymax <- max(sub) + 20
ts.plot(mem_sim)
polygon(x=c(start,end,rev(c(start,end))),
y=c(rep(ymin,2),rep(ymax,2)),
col=rgb(0.5,0.5,0.5,0.5),border=NA)
abline(sub_lm,lty=2)
}
plotfun(mem_sim,window=20,center=50)
plotfun <- function(series,window,center){
##subsets and computes the regression.
start <- center-window
end <- center+window
sub <- series[start:end]
sub_lm <- lm(sub~seq(start:end))
##creates the plot
ymin <- min(sub) - 20
ymax <- max(sub) + 20
ts.plot(mem_sim)
polygon(x=c(start,end,rev(c(start,end))),
y=c(rep(ymin,2),rep(ymax,2)),
col=rgb(0.5,0.5,0.5,0.5),border=NA)
abline(sub_lm,lty=2)
}
plotfun(mem_sim,window=20,center=160)
plotfun <- function(series,window,center){
##subsets and computes the regression.
start <- center-window
end <- center+window
sub <- series[start:end]
sub_lm <- lm(sub~seq(start:end))
##creates the plot
ymin <- min(sub) - 20
ymax <- max(sub) + 20
ts.plot(mem_sim)
polygon(x=c(start,end,rev(c(start,end))),
y=c(rep(ymin,2),rep(ymax,2)),
col=rgb(0.5,0.5,0.5,0.5),border=NA)
abline(sub_lm,lty=2)
}
plotfun(mem_sim,window=20,center=20)
plotfun <- function(series,window,center){
##subsets and computes the regression.
start <- center-window
end <- center+window
sub <- series[start:end]
sub_lm <- lm(sub~seq(start:end))
##creates the plot
ymin <- min(sub) - 20
ymax <- max(sub) + 20
ts.plot(mem_sim)
polygon(x=c(start,end,rev(c(start,end))),
y=c(rep(ymin,2),rep(ymax,2)),
col=rgb(0.5,0.5,0.5,0.5),border=NA)
abline(sub_lm,lty=2)
}
plotfun(mem_sim,window=20,center=21)
plotfun <- function(series,window,center){
##subsets and computes the regression.
start <- center-window
end <- center+window
sub <- series[start:end]
sub_lm <- lm(sub~seq(start:end))
##creates the plot
ymin <- min(sub) - 20
ymax <- max(sub) + 20
ts.plot(mem_sim)
polygon(x=c(start,end,rev(c(start,end))),
y=c(rep(ymin,2),rep(ymax,2)),
col=rgb(0.5,0.5,0.5,0.5),border=NA)
abline(sub_lm,lty=2)
}
plotfun(mem_sim,window=20,center=24)
plotfun <- function(series,window,center){
##subsets and computes the regression.
start <- center-window
end <- center+window
sub <- series[start:end]
sub_lm <- lm(sub~seq(start:end))
##creates the plot
ymin <- min(sub) - 20
ymax <- max(sub) + 20
ts.plot(mem_sim)
polygon(x=c(start,end,rev(c(start,end))),
y=c(rep(ymin,2),rep(ymax,2)),
col=rgb(0.5,0.5,0.5,0.5),border=NA)
abline(sub_lm,lty=2)
}
plotfun(mem_sim,window=20,center=27)
plotfun <- function(series,window,center){
##subsets and computes the regression.
start <- center-window
end <- center+window
sub <- series[start:end]
sub_lm <- lm(sub~seq(start:end))
##creates the plot
ymin <- min(sub) - 20
ymax <- max(sub) + 20
ts.plot(mem_sim)
polygon(x=c(start,end,rev(c(start,end))),
y=c(rep(ymin,2),rep(ymax,2)),
col=rgb(0.5,0.5,0.5,0.5),border=NA)
abline(sub_lm,lty=2)
}
plotfun(mem_sim,window=20,center=30)
plotfun <- function(series,window,center){
##subsets and computes the regression.
start <- center-window
end <- center+window
sub <- series[start:end]
sub_lm <- lm(sub~seq(start:end))
##creates the plot
ymin <- min(sub) - 20
ymax <- max(sub) + 20
ts.plot(mem_sim)
polygon(x=c(start,end,rev(c(start,end))),
y=c(rep(ymin,2),rep(ymax,2)),
col=rgb(0.5,0.5,0.5,0.5),border=NA)
abline(sub_lm,lty=2)
}
plotfun(mem_sim,window=20,center=2)
plotfun <- function(series,window,center){
##subsets and computes the regression.
start <- center-window
end <- center+window
sub <- series[start:end]
sub_lm <- lm(sub~seq(start:end))
##creates the plot
ymin <- min(sub) - 20
ymax <- max(sub) + 20
ts.plot(mem_sim)
polygon(x=c(start,end,rev(c(start,end))),
y=c(rep(ymin,2),rep(ymax,2)),
col=rgb(0.5,0.5,0.5,0.5),border=NA)
abline(sub_lm,lty=2)
}
plotfun(mem_sim,window=20,center=60)
plotfun(mem_sim,window=20,center=100)
plotfun(nomem_sim,window=20,center=100)
plotfun(mem_sim,window=20,center=100)
plotfun(nomem_sim,window=20,center=100)
plotfun <- function(series,window,center){
##subsets and computes the regression.
start <- center-window
end <- center+window
sub <- series[start:end]
sub_lm <- lm(sub~seq(start:end))
##creates the plot
ymin <- min(sub) - 20
ymax <- max(sub) + 20
ts.plot(series)
polygon(x=c(start,end,rev(c(start,end))),
y=c(rep(ymin,2),rep(ymax,2)),
col=rgb(0.5,0.5,0.5,0.5),border=NA)
abline(sub_lm,lty=2)
}
plotfun(mem_sim,window=20,center=100)
plotfun(nomem_sim,window=20,center=100)
plotfun(mem_sim,window=20,center=100)
plotfun(nomem_sim,window=20,center=100)
plotfun(mem_sim,window=20,center=100)
plotfun(mem_sim,window=20,center=30)
plotfun(mem_sim,window=20,center=70)
plotfun(nomem_sim,window=20,center=100)
plotfun(nomem_sim,window=20,center=30)
plotfun(nomem_sim,window=20,center=120)
plotfun <- function(series,window,center){
##subsets and computes the regression.
start <- center-window
end <- center+window
sub <- series[start:end]
sub_lm <- lm(sub~seq(start:end))
##creates the plot
ymin <- min(sub) - 20
ymax <- max(sub) + 20
ts.plot(series,col=rgb(0.2,0.2,0.8,0.7))
polygon(x=c(start,end,rev(c(start,end))),
y=c(rep(ymin,2),rep(ymax,2)),
col=rgb(0.5,0.5,0.5,0.5),border=NA)
abline(sub_lm,lty=2)
}
plotfun(mem_sim,window=20,center=70)
plotfun(nomem_sim,window=20,center=120)
plotfun(mem_sim,window=50,center=70)
##Generates two time-series: one with memory, one without.
int <- 0.5
slope <- 0.01
n <- 200
mem_sim <- int+slope*seq(1:n)+arima.sim(n = n,
model=list(ar = c(1, -0.1858), ma = c(-0.2279, 0.2488)),
rand.gen = function(n, ...) sqrt(0.1796) * rt(n, df = 5))
nomem_sim <- int+slope*seq(1:n)+arima.sim(n=n,model=list())
##Generates two time-series: one with memory, one without.
int <- 0.5
slope <- 0.03
n <- 200
mem_sim <- int+slope*seq(1:n)+arima.sim(n = n,
model=list(ar = c(1, -0.1858), ma = c(-0.2279, 0.2488)),
rand.gen = function(n, ...) sqrt(0.1796) * rt(n, df = 5))
nomem_sim <- int+slope*seq(1:n)+arima.sim(n=n,model=list())
plotfun <- function(series,window,center){
##subsets and computes the regression.
start <- center-window
end <- center+window
sub <- series[start:end]
sub_lm <- lm(sub~seq(start:end))
##creates the plot
ymin <- min(sub) - 20
ymax <- max(sub) + 20
ts.plot(series,col=rgb(0.2,0.2,0.8,0.7))
polygon(x=c(start,end,rev(c(start,end))),
y=c(rep(ymin,2),rep(ymax,2)),
col=rgb(0.5,0.5,0.5,0.5),border=NA)
abline(sub_lm,lty=2)
}
plotfun(mem_sim,window=50,center=70)
plotfun(nomem_sim,window=20,center=120)
plotfun(nomem_sim,window=20,center=120)
plotfun(mem_sim,window=50,center=70)
plotfun(nomem_sim,window=20,center=120)
plotfun(mem_sim,window=50,center=70)
plotfun(nomem_sim,window=20,center=120)
plotfun(mem_sim,window=50,center=70)
plotfun(nomem_sim,window=50,center=70)
plotfun(mem_sim,window=50,center=70)
plotfun(nomem_sim,window=50,center=70)
plotfun(mem_sim,window=50,center=70)
plotfun(nomem_sim,window=50,center=70)
plotfun(nomem_sim,window=50,center=120)
library(shiny)
runApp()
?shinyUI
runApp()
debug(start:end)
debug(plotfun)
plotfun(mem_sim,nomem_sim)
debug(plotfun)
plotfun(mem_sim,40,150)
sub_lm
seq(start:end)
start
end
start:end
runApp()
runApp()
install.packages('microbenchmark')
help(package='microbenchmark')
library(microbenchmark)
microbenchmark(plotfun(nomem_sim,20,60))
microbenchmark(plotfun(nomem_sim,20,60))
mb <- microbenchmark(c(plotfun(nomem_sim,20,60)),times=100)
undebug(plotfun)
plotfun(mem_sim,20,50)
microbenchmark(plotfun(mem_sim,20,50),times=200)
rgb(0.2,0.2,0.8,0.7)
plot(mem_sim)
ts.plot(mem_sim)
microbenchmark(list(plot(mem_sim),ts.plot(mem_sim)),times=100)
microbenchmark(plot(mem_sim),times=100)
microbenchmark(ts.plot(mem_sim),times=100)
new_plotfun <- function(series,start,end){
##subsets and computes the regression.
sub <- series[start:end]
sub_lm <- lm(sub~c(start:end))
##creates the plot
ymin <- -2
ymax <- 10
ts.plot(series,col="#3333CCB3",ylim=c(ymin,ymax))
polygon(x=c(start,end,rev(c(start,end))),
y=c(rep(ymin,2),rep(ymax,2)),
col=rgb(0.5,0.5,0.5,0.5),border=NA)
abline(sub_lm,lty=2)
}
microbenchmark(new_plotfun(mem_sim,start=40,end=80),times=100)
##Generates two time-series: one with memory, one without.
int <- 0.5
slope <- 0.03
n <- 50
mem_sim <- int+slope*seq(1:n)+arima.sim(n = n,
model=list(ar = c(1, -0.1858), ma = c(-0.2279, 0.2488)),
rand.gen = function(n, ...) sqrt(0.1796) * rt(n, df = 5))
nomem_sim <- int+slope*seq(1:n)+arima.sim(n=n,model=list())
plotfun <- function(series,window,center){
##subsets and computes the regression.
start <- center-window
end <- center+window
sub <- series[start:end]
sub_lm <- lm(sub~c(start:end))
##creates the plot
ymin <- min(sub) - 20
ymax <- max(sub) + 20
ts.plot(series,col="#3333CCB3")
polygon(x=c(start,end,rev(c(start,end))),
y=c(rep(ymin,2),rep(ymax,2)),
col=rgb(0.5,0.5,0.5,0.5),border=NA)
abline(sub_lm,lty=2)
}
microbenchmark(plotfun(mem_sim,20,50),times=200)
##Generates two time-series: one with memory, one without.
int <- 0.5
slope <- 0.03
n <- 500
mem_sim <- int+slope*seq(1:n)+arima.sim(n = n,
model=list(ar = c(1, -0.1858), ma = c(-0.2279, 0.2488)),
rand.gen = function(n, ...) sqrt(0.1796) * rt(n, df = 5))
nomem_sim <- int+slope*seq(1:n)+arima.sim(n=n,model=list())
##Function to subset the data,fits a regression to the data, and plot it.
plotfun <- function(series,window,center){
##subsets and computes the regression.
start <- center-window
end <- center+window
sub <- series[start:end]
sub_lm <- lm(sub~c(start:end))
##creates the plot
ymin <- min(sub) - 20
ymax <- max(sub) + 20
ts.plot(series,col="#3333CCB3")
polygon(x=c(start,end,rev(c(start,end))),
y=c(rep(ymin,2),rep(ymax,2)),
col=rgb(0.5,0.5,0.5,0.5),border=NA)
abline(sub_lm,lty=2)
}
microbenchmark(plotfun(mem_sim,20,70))
microbenchmark(plotfun(mem_sim,20,70),times=100)
plotfun <- function(series,window,center){
##subsets and computes the regression.
start <- center-window
end <- center+window
sub <- series[start:end]
sub_lm <- lm(sub~c(start:end))
##creates the plot
ymin <- min(sub) - 20
ymax <- max(sub) + 20
ts.plot(series,col=rgb(0.3,0.3,0.8,1))
polygon(x=c(start,end,rev(c(start,end))),
y=c(rep(ymin,2),rep(ymax,2)),
col=rgb(0.5,0.5,0.5,0.5),border=NA)
abline(sub_lm,lty=2)
}
microbenchmark(plotfun(mem_sim,20,70),times=100)
runApp()
runApp()
runApp()
runApp()
?acf
#initialize vector
ei<-rep(NA,80)
#generate AR(1),rho=.8
set.seed(10)
ei[1]<-rnorm(1)
for(k in 2:80) ei[k] <- .8*ei[k-1]+rnorm(1)
ei1<-ei
#graph ACF and PACF--Fig.3
par(mfrow=c(1,2))
plot(acf(ei1,lag.max=10,plot=F),main='',ci.col='white',ylim=c(-.3,1))
lines(0:10,-1.96/sqrt(80-(0:10)),lty=2,col=4)
lines(0:10,1.96/sqrt(80-(0:10)),lty=2,col=4)
plot(pacf(ei1,lag.max=10,plot=F),main='',ci.col='white')
lines(0:10,-1.96/sqrt(80-(0:10)),lty=2,col=4)
lines(0:10,1.96/sqrt(80-(0:10)),lty=2,col=4)
par(mfrow=c(1,1))
RunApp()
library(shiny)
runApp()
