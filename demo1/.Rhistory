cnf_ar <- predict(model_ar,newdata=data2$start,se.fit=T,n.ahead=5)
##Creates a plot
plot(data2$start,data2$cats,type='l',xlim=as.Date(c(start,end)))
##Adds a trend line to the plot.
model <- lm(data2$cats~data2$start)
##Adds the confidence and predictive interval to the dataset.
dates <- seq(start,end,by=7)
prd <- predict(model,newdata=data2$start,interval="prediction",level=0.95,type="response")
cnf <- predict(model,newdata=data2$start,interval="confidence",level=0.95,type="response")
polygon(c(data2$start,rev(data2$start)),c(prd[,2],rev(prd[,3])), col="grey80",border=NULL,lty="blank")
polygon(c(data2$start,rev(data2$start)),c(cnf[,2],rev(cnf[,3])), col="grey60",border=NULL,lty="blank")
lines(data2$start,data2$cats,type='l',col="blue")
abline(model,lty=2)
polygon(c(data2$start,rev(data2$start)),c(cnf2[,2],rev(cnf2[,3])), col=rgb(0.5,0.5,0.5,0.5),border=NULL,lty="blank")
polygon(c(data2$start,rev(data2$start)),c(cnf2[,2],rev(cnf2[,3])), col=rgb(0,0,0,0),border=1,lty="blank")
polygon(c(data2$start,rev(data2$start)),c(cnf2[,2],rev(cnf2[,3])), col=rgb(0.8,0.8,0.5,0.5),border=NULL,lty="blank")
summary(model2)
install.packages(dynlm)
install.packages("dynlm")
?predict.dynlm
model3 <- dynlm(y~trend(data_ts))
library(dynlm)
model3 <- dynlm(y~trend(data_ts))
model3 <- dynlm(data_ts~trend(data_ts))
summary(model3)
plot(model3)
model3 <- dynlm(data_ts~lag(data_ts,-1))
summary(model3)
model3 <- dynlm(data_ts~lag(data_ts,-1)+trend(data_ts))
summary(model3)
plot(data_ts)
abline(model3,lty=3)
abline(coef(model3)[1],coef(model3)[3])
##Subsets the data.
start <- as.Date("2004-01-01")
end <- as.Date("2008-01-01")
data2 <- data[data$start>=start&data$end<=end,]
##Creates a plot
plot(data2$start,data2$cats,type='l',xlim=as.Date(c(start,end)))
##Adds a trend line to the plot.
model <- lm(data2$cats~data2$start)
##Adds the confidence and predictive interval to the dataset.
dates <- seq(start,end,by=7)
prd <- predict(model,newdata=data2$start,interval="prediction",level=0.95,type="response")
cnf <- predict(model,newdata=data2$start,interval="confidence",level=0.95,type="response")
polygon(c(data2$start,rev(data2$start)),c(prd[,2],rev(prd[,3])), col="grey80",border=NULL,lty="blank")
polygon(c(data2$start,rev(data2$start)),c(cnf[,2],rev(cnf[,3])), col="grey60",border=NULL,lty="blank")
lines(data2$start,data2$cats,type='l',col="blue")
abline(model,lty=2)
acf(model$residuals)
acf(model2$residuals)
library(nlme)
model3 <- gls(cats~start,correlation=corARMA(p=1))
model3 <- gls(cats~start,data=data2,correlation=corARMA(p=1))
summary(model3)
##Subsets the data.
start <- as.Date("2005-01-01")
end <- as.Date("2006-01-01")
data2 <- data[data$start>=start&data$end<=end,]
##Creates a plot
plot(data2$start,data2$cats,type='l',xlim=as.Date(c(start,end)))
##Adds a trend line to the plot.
model <- lm(data2$cats~data2$start)
##Adds the confidence and predictive interval to the dataset.
dates <- seq(start,end,by=7)
prd <- predict(model,newdata=data2$start,interval="prediction",level=0.95,type="response")
cnf <- predict(model,newdata=data2$start,interval="confidence",level=0.95,type="response")
polygon(c(data2$start,rev(data2$start)),c(prd[,2],rev(prd[,3])), col="grey80",border=NULL,lty="blank")
polygon(c(data2$start,rev(data2$start)),c(cnf[,2],rev(cnf[,3])), col="grey60",border=NULL,lty="blank")
lines(data2$start,data2$cats,type='l',col="blue")
abline(model,lty=2)
##Fits an ols model with lag1.
data2$cats_lag1 <- c(NA,data2$cats[1:length(data2$cats)-1])
model2 <- lm(cats~cats_lag1 + start,data=data2)
prd2 <- predict(model2,newdata=data2,interval="prediction",level=0.95,type="response")
##sets all of the lags to the mean.
data3 <- data2
data3$cats_lag1 <- mean(data2$cats_lag1,na.rm=T)
cnf2 <- predict(model2,newdata=data3,interval="confidence",level=0.95,type="response")
#polygon(c(data2$start,rev(data2$start)),c(prd2[,2],rev(prd2[,3])), col="grey80",border=NULL,lty="blank")
polygon(c(data2$start,rev(data2$start)),c(cnf2[,2],rev(cnf2[,3])), col=rgb(0.8,0.8,0.5,0.5),border=NULL,lty="blank")
lines(data2$start,data2$cats,type='l',col="blue")
##Computes the autocorrelation function for the subset.
acf(model2$residuals)
acf(model$residuals)
model3 <- gls(cats~start,data=data2,correlation=corARMA(p=1))
?predict.gls
summary(model3)
##Fits an AR1 model using generalized least squares.
model3 <- gls(cats~start,data=data2,correlation=corARMA(p=1))
summary(model3)
summary(model)
end <- as.Date("2009-01-01")
start <- as.Date("2005-01-01")
data2 <- data[data$start>=start&data$end<=end,]
plot(data2$start,data2$cats,type='l',xlim=as.Date(c(start,end)))
model <- lm(data2$cats~data2$start)
abline(model,lty=2)
acf(model$residuals)
library(AICcmodavg)
install.packages(AICcmodavg)
install.packages("AICcmodavg)
install.packages("AICcmodavg")
library("AICcmodavg")
predictSE.gls
predictSE.gls(model3,newdata=data2,se.fit=T)
prd <- predictSE.gls(model3,newdata=data2,se.fit=T)
##Subsets the data.
start <- as.Date("2005-01-01")
end <- as.Date("2007-01-01")
data2 <- data[data$start>=start&data$end<=end,]
##Creates a plot
plot(data2$start,data2$cats,type='l',xlim=as.Date(c(start,end)))
##Adds a trend line to the plot.
model <- lm(data2$cats~data2$start)
##Adds the confidence and predictive interval to the dataset.
dates <- seq(start,end,by=7)
prd <- predict(model,newdata=data2$start,interval="prediction",level=0.95,type="response")
cnf <- predict(model,newdata=data2$start,interval="confidence",level=0.95,type="response")
polygon(c(data2$start,rev(data2$start)),c(prd[,2],rev(prd[,3])), col="grey80",border=NULL,lty="blank")
polygon(c(data2$start,rev(data2$start)),c(cnf[,2],rev(cnf[,3])), col="grey60",border=NULL,lty="blank")
lines(data2$start,data2$cats,type='l',col="blue")
##Subsets the data.
start <- as.Date("2006-01-01")
end <- as.Date("2007-01-01")
data2 <- data[data$start>=start&data$end<=end,]
##Creates a plot
plot(data2$start,data2$cats,type='l',xlim=as.Date(c(start,end)))
##Adds a trend line to the plot.
model <- lm(data2$cats~data2$start)
##Adds the confidence and predictive interval to the dataset.
dates <- seq(start,end,by=7)
prd <- predict(model,newdata=data2$start,interval="prediction",level=0.95,type="response")
cnf <- predict(model,newdata=data2$start,interval="confidence",level=0.95,type="response")
polygon(c(data2$start,rev(data2$start)),c(prd[,2],rev(prd[,3])), col="grey80",border=NULL,lty="blank")
polygon(c(data2$start,rev(data2$start)),c(cnf[,2],rev(cnf[,3])), col="grey60",border=NULL,lty="blank")
lines(data2$start,data2$cats,type='l',col="blue")
abline(model,lty=2)
data2$start
?seq
newdat <- c(data2$start,seq(data2$start[length(data2$start)],by=7,length.out=52))
head(newdat)
#Subsets the data.
start <- as.Date("2006-01-01")
end <- as.Date("2007-01-01")
data2 <- data[data$start>=start&data$end<=end,]
##Creates a plot
plot(data2$start,data2$cats,type='l',xlim=as.Date(c(start,end)))
##Adds a trend line to the plot.
model <- lm(data2$cats~data2$start)
##Adds the confidence and predictive interval to the dataset.
dates <- seq(start,end,by=7)
newdat <- c(data2$start,seq(data2$start[length(data2$start)],by=7,length.out=52))
data2$start
newdat
min(newdat)
max(newdat)
plot(data2$start,data2$cats,type='l',xlim=c(min(newdat),max(newdat)))
str(cnf)
cnf
plot(data2$start,data2$cats,type='l',xlim=c(min(newdat),max(newdat)),ylim=c(min(cnf$lwr),max(cnf$upr)))
plot(data2$start,data2$cats,type='l',xlim=c(min(newdat),max(newdat)),ylim=c(min(cnf[,2]),max(cnf[,3])))
plot(data2$start,data2$cats,type='l',xlim=c(min(newdat),max(newdat)),ylim=c(min(prd[,2]),max(prd[,3])))
polygon(c(data2$start,rev(data2$start)),c(prd[,2],rev(prd[,3])), col="grey80",border=NULL,lty="blank")
polygon(c(data2$start,rev(data2$start)),c(cnf[,2],rev(cnf[,3])), col="grey60",border=NULL,lty="blank")
lines(data2$start,data2$cats,type='l',col="blue")
abline(model,lty=2)
polygon(c(newdat,rev(newdat)),c(prd[,2],rev(prd[,3])), col="grey80",border=NULL,lty="blank")
prd <- predict(model,newdata=newdat,interval="prediction",level=0.95,type="response")
cnf <- predict(model,newdata=newdat,interval="confidence",level=0.95,type="response")
##Creates a plot
plot(data2$start,data2$cats,type='l',xlim=c(min(newdat),max(newdat)),ylim=c(min(prd[,2]),max(prd[,3])))
polygon(c(newdat,rev(newdat)),c(prd[,2],rev(prd[,3])), col="grey80",border=NULL,lty="blank")
length(prd[,2])
dates
newdat
prd
prd <- predict(model,newdata=newdat,interval="prediction",level=0.95,type="response")
cnf <- predict(model,newdata=newdat,interval="confidence",level=0.95,type="response")
?predict.lm
##Reads in the data and converts it to a date format.
data <- read.csv('report.csv',skip=4,nrows=500)
data$Week <- as.character(data$Week)
weeks <- matrix(unlist(strsplit(data$Week,split=" - "),recursive=F),byrow=T,ncol=2)
data <- data.frame(data,start=weeks[,1],end=weeks[,2])
data$start <- as.Date(as.character(data$start))
data$end <- as.Date(as.character(data$end))
##Subsets the data.
start <- as.Date("2006-01-01")
end <- as.Date("2007-01-01")
data2 <- data[data$start>=start&data$end<=end,]
##Adds a trend line to the plot.
model <- lm(data2$cats~data2$start)
##Adds the confidence and predictive interval to the dataset.
dates <- seq(start,end,by=7)
newdat <- c(data2$start,seq(data2$start[length(data2$start)],by=7,length.out=52))
prd <- predict(model,newdata=newdat,interval="prediction",level=0.95,type="response")
cnf <- predict(model,newdata=newdat,interval="confidence",level=0.95,type="response")
##Creates a plot
plot(data2$start,data2$cats,type='l',xlim=c(min(newdat),max(newdat)),ylim=c(min(prd[,2]),max(prd[,3])))
polygon(c(newdat,rev(newdat)),c(prd[,2],rev(prd[,3])), col="grey80",border=NULL,lty="blank")
prd <- predict(model,newdata=data.frame(start=newdat),interval="prediction",level=0.95,type="response")
data.frame(start=newdat)
dates
model <- lm(data2$cats~dates)
length(data2$start)
length(dates)
dates
data2$start
dates <- c(data2$start,seq(data2$start[length(data2$start)],by=7,length.out=52))
dates
model <- lm(cats~start,data=data2)
dates <- c(data2$start,seq(data2$start[length(data2$start)],by=7,length.out=52))
prd <- predict(model,newdata=data.frame(start=newdat),interval="prediction",level=0.95,type="response")
dates <- c(data2$start,seq(data2$start[length(data2$start)],by=7,length.out=52))
prd <- predict(model,newdata=data.frame(start=newdat),interval="prediction",level=0.95,type="response")
cnf <- predict(model,newdata=data.frame(start=newdat),interval="confidence",level=0.95,type="response")
##Creates a plot
plot(data2$start,data2$cats,type='l',xlim=c(min(newdat),max(newdat)),ylim=c(min(prd[,2]),max(prd[,3])))
polygon(c(newdat,rev(newdat)),c(prd[,2],rev(prd[,3])), col="grey80",border=NULL,lty="blank")
polygon(c(data2$start,rev(data2$start)),c(cnf[,2],rev(cnf[,3])), col="grey60",border=NULL,lty="blank")
lines(data2$start,data2$cats,type='l',col="blue")
abline(model,lty=2)
abline(h=end)
abline(v=end)
lines(dates,seq(data2$start[1],data2$start[length(data2$start)],by=7))
midbreak <- as.Date("2007-01-01")
data2 <- data[data$start>=start&data$end<=end,]
data3 <- data[data$start>=start&data$end<=midbreak,]
model <- lm(cats~start,data=data3)
dates <- data3$start
prd <- predict(model,newdata=data3,interval="prediction",level=0.95,type="response")
cnf <- predict(model,newdata=data3,interval="confidence",level=0.95,type="response")
##Creates a plot
plot(data2$start,data2$cats,type='l',xlim=c(min(newdat),max(newdat)),ylim=c(min(prd[,2]),max(prd[,3])))
##Creates a plot
plot(data2$start,data2$cats,type='l',xlim=c(min(data2$start),max(data2$start)),ylim=c(min(prd[,2]),max(prd[,3])))
##Adds the confidence and predictive interval to the dataset.
prd <- predict(model,newdata=data2,interval="prediction",level=0.95,type="response")
cnf <- predict(model,newdata=data2,interval="confidence",level=0.95,type="response")
##Creates a plot
plot(data2$start,data2$cats,type='l',xlim=c(min(data2$start),max(data2$start)),ylim=c(min(prd[,2]),max(prd[,3])))
data2 <- data[data$start>=start&data$end<=end,]
data3 <- data[data$start>=start&data$end<=midbreak,]
##Adds a trend line to the plot.
model <- lm(cats~start,data=data3)
##Adds the confidence and predictive interval to the dataset.
prd <- predict(model,newdata=data2,interval="prediction",level=0.95,type="response")
cnf <- predict(model,newdata=data2,interval="confidence",level=0.95,type="response")
##Creates a plot
plot(data2$start,data2$cats,type='l',xlim=c(min(data2$start),max(data2$start)),ylim=c(min(prd[,2]),max(prd[,3])))
head(data2)
data2
c(min(data2$start),max(data2$start))
end <- as.Date("2008-01-01")
data2 <- data[data$start>=start&data$end<=end,]
data3 <- data[data$start>=start&data$end<=midbreak,]
c(min(data2$start),max(data2$start))
plot(data2$start,data2$cats,type='l',xlim=c(min(data2$start),max(data2$start)),ylim=c(min(prd[,2]),max(prd[,3])))
plot(data3$start,data3$cats,type='l',xlim=c(min(data2$start),max(data2$start)),ylim=c(min(prd[,2]),max(prd[,3])))
prd <- predict(model,newdata=data2,interval="prediction",level=0.95,type="response")
cnf <- predict(model,newdata=data2,interval="confidence",level=0.95,type="response")
##Creates a plot
plot(data3$start,data3$cats,type='l',xlim=c(min(data2$start),max(data2$start)),ylim=c(min(prd[,2]),max(prd[,3])))
polygon(c(newdat,rev(newdat)),c(prd[,2],rev(prd[,3])), col="grey80",border=NULL,lty="blank")
polygon(c(data2$start,rev(data2$start)),c(cnf[,2],rev(cnf[,3])), col="grey60",border=NULL,lty="blank")
lines(data2$start,data2$cats,type='l',col="blue")
abline(v=end)
lines(data3$start,data3$cats,type='l',col="blue")
data4 <- data[data$start>=midbreak&data$end<=end,]
data4
lines(data4$start,data4$cats,type="l",lty=2,col="blue")
##Creates a plot
plot(data3$start,data3$cats,type='l',xlim=c(min(data2$start),max(data2$start)),ylim=c(min(prd[,2]),max(prd[,3])))
polygon(c(newdat,rev(newdat)),c(prd[,2],rev(prd[,3])), col="grey80",border=NULL,lty="blank")
polygon(c(data2$start,rev(data2$start)),c(cnf[,2],rev(cnf[,3])), col="grey60",border=NULL,lty="blank")
lines(data3$start,data3$cats,type='l',col="blue")
abline(v=end)
lines(data4$start,data4$cats,type="l",lty=2,col="blue")
##Reads in the data and converts it to a date format.
data <- read.csv('report.csv',skip=4,nrows=500)
data$Week <- as.character(data$Week)
weeks <- matrix(unlist(strsplit(data$Week,split=" - "),recursive=F),byrow=T,ncol=2)
data <- data.frame(data,start=weeks[,1],end=weeks[,2])
data$start <- as.Date(as.character(data$start))
data$end <- as.Date(as.character(data$end))
##Subsets the data.
start <- as.Date("2006-01-01")
end <- as.Date("2008-01-01")
midbreak <- as.Date("2007-01-01")
data2 <- data[data$start>=start&data$start<end,]
data3 <- data[data$start>=start&data$start<=midbreak,]
data4 <- data[data$start>=midbreak&data$start<end,]
data2 <- data[data$start>=start&data$start<=end,]
data4 <- data[data$start>=midbreak&data$start<end,]
data3 <- data[data$start>=start&data$start<=midbreak,]
data2 <- data[data$start>=start&data$start<=end,]
min(data2$start)
max(data2$start)
max(data3$start)
max(data4$start)
min(data4$start)
min(data3$start)
min(data2$start)
start_dat <- data[data$start>=start&data$start<=mid,]
mid <- as.Date("2007-01-07")
start_dat <- data[data$start>=start&data$start<=mid,]
start_dat
model <- lm(cats~start,data=start_dat)
prd <- predict(model,newdata=all_dat,interval="prediction",level=0.95,type="response")
cnf <- predict(model,newdata=all_dat,interval="confidence",level=0.95,type="response")
all_dat <- data[data$start>=start&data$start<=end,]
prd <- predict(model,newdata=all_dat,interval="prediction",level=0.95,type="response")
cnf <- predict(model,newdata=all_dat,interval="confidence",level=0.95,type="response")
##Creates a plot
plot(cats~start,data=start_dat,type='l',xlim=range(all_dat$start),ylim=c(min(prd[,2]),max(prd[,3])))
plot(cats~start,data=start_dat,type='n',xlim=range(all_dat$start),ylim=c(min(prd[,2]),max(prd[,3])))
polygon(c(all_dat$start,rev(all_dat$start)),c(prd[,2],rev(prd[,3])), col="grey80",border=NULL,lty="blank")
polygon(c(all_dat$start,rev(all_dat$start)),c(cnf[,2],rev(cnf[,3])), col="grey60",border=NULL,lty="blank")
lines(data3$start,data3$cats,type='l',col="blue")
lines(data4$start,data4$cats,type="l",lty=2,col="blue")
mid <- as.Date("2007-01-01")
start_dat <- data[data$start>=start&data$start<=mid,]
end_dat <- data[data$start>=mid&data$start<=end,]
all_dat <- data[data$start>=start&data$start<=end,]
##Adds a trend line to the plot.
model <- lm(cats~start,data=start_dat)
##Adds the confidence and predictive interval to the dataset.
prd <- predict(model,newdata=all_dat,interval="prediction",level=0.95,type="response")
cnf <- predict(model,newdata=all_dat,interval="confidence",level=0.95,type="response")
##Creates a plot
plot(cats~start,data=start_dat,type='n',xlim=range(all_dat$start),ylim=c(min(prd[,2]),max(prd[,3])))
polygon(c(all_dat$start,rev(all_dat$start)),c(prd[,2],rev(prd[,3])), col="grey80",border=NULL,lty="blank")
polygon(c(all_dat$start,rev(all_dat$start)),c(cnf[,2],rev(cnf[,3])), col="grey60",border=NULL,lty="blank")
lines(data3$start,data3$cats,type='l',col="blue")
abline(v=end)
lines(data4$start,data4$cats,type="l",lty=2,col="blue")
abline(v=mid)
max(start_dat$start)
min(end_dat$start)
##Adds the confidence and predictive interval to the dataset.
prd <- predict(model,newdata=all_dat,interval="prediction",level=0.95,type="response")
cnf <- predict(model,newdata=all_dat,interval="confidence",level=0.95,type="response")
abline(model,lty=2)
##Creates a plot
plot(cats~start,data=start_dat,type='n',xlim=range(all_dat$start),ylim=c(min(prd[,2]),max(prd[,3])))
polygon(c(all_dat$start,rev(all_dat$start)),c(prd[,2],rev(prd[,3])), col="grey80",border=NULL,lty="blank")
polygon(c(all_dat$start,rev(all_dat$start)),c(cnf[,2],rev(cnf[,3])), col="grey60",border=NULL,lty="blank")
lines(data3$start,data3$cats,type='l',col="blue")
abline(v=mid)
lines(data4$start,data4$cats,type="l",lty=2,col="blue")
abline(model,lty=2)
?abline
##Reads in the data and converts it to a date format.
data <- read.csv('report.csv',skip=4,nrows=500)
data$Week <- as.character(data$Week)
weeks <- matrix(unlist(strsplit(data$Week,split=" - "),recursive=F),byrow=T,ncol=2)
data <- data.frame(data,start=weeks[,1],end=weeks[,2])
data$start <- as.Date(as.character(data$start))
data$end <- as.Date(as.character(data$end))
##Subsets the data.
start <- as.Date("2006-01-01")
end <- as.Date("2008-01-01")
mid <- as.Date("2007-01-01")
start_dat <- data[data$start>=start&data$start<=mid,]
end_dat <- data[data$start>=mid&data$start<=end,]
all_dat <- data[data$start>=start&data$start<=end,]
##Adds a trend line to the plot.
model <- lm(cats~start,data=start_dat)
##Adds the confidence and predictive interval to the dataset.
prd <- predict(model,newdata=all_dat,interval="prediction",level=0.95,type="response")
cnf <- predict(model,newdata=all_dat,interval="confidence",level=0.95,type="response")
##Creates a plot
plot(cats~start,data=start_dat,type='n',xlim=range(all_dat$start),ylim=c(min(prd[,2]),max(prd[,3])))
polygon(c(all_dat$start,rev(all_dat$start)),c(prd[,2],rev(prd[,3])), col="grey80",border=NULL,lty="blank")
polygon(c(all_dat$start,rev(all_dat$start)),c(cnf[,2],rev(cnf[,3])), col="grey60",border=NULL,lty="blank")
lines(start_dat$start,start_dat$cats,type='l',col="blue")
abline(v=mid)
lines(end_dat$start,end_dat$cats,type="l",lty=2,col="blue")
lines(start_dat$start,start_dat$cats,type='b',col="blue",pch=21)
lines(start_dat$start,start_dat$cats,type='b',col="blue",pch=20)
lines(start_dat$start,start_dat$cats,type='b',col=rgb(0,0,1,0.6),pch=20)
lines(start_dat$start,start_dat$cats,type='b',col=rgb(0,0,1,0.6),pch=20)
##Creates a plot
plot(cats~start,data=start_dat,type='n',xlim=range(all_dat$start),ylim=c(min(prd[,2]),max(prd[,3])))
polygon(c(all_dat$start,rev(all_dat$start)),c(prd[,2],rev(prd[,3])), col="grey80",border=NULL,lty="blank")
polygon(c(all_dat$start,rev(all_dat$start)),c(cnf[,2],rev(cnf[,3])), col="grey60",border=NULL,lty="blank")
lines(start_dat$start,start_dat$cats,type='b',col=rgb(0,0,1,0.6),pch=20)
abline(v=mid)
lines(end_dat$start,end_dat$cats,type="l",lty=2,col="blue")
lines(end_dat$start,end_dat$cats,type="b",lty=2,col="blue")
lines(end_dat$start,end_dat$cats,type="b",lty=2,col=rgb(0,0,1,0.6),pch=20)
##Creates a plot
plot(cats~start,data=start_dat,type='n',xlim=range(all_dat$start),ylim=c(min(prd[,2]),max(prd[,3])))
polygon(c(all_dat$start,rev(all_dat$start)),c(prd[,2],rev(prd[,3])), col="grey80",border=NULL,lty="blank")
polygon(c(all_dat$start,rev(all_dat$start)),c(cnf[,2],rev(cnf[,3])), col="grey60",border=NULL,lty="blank")
lines(start_dat$start,start_dat$cats,type='b',col=rgb(0,0,1,0.6),pch=20)
abline(v=mid)
lines(end_dat$start,end_dat$cats,type="b",lty=2,col=rgb(0,0,1,0.6),pch=20)
##Creates a plot
plot(cats~start,data=start_dat,type='n',xlim=range(all_dat$start),ylim=c(min(prd[,2]),max(prd[,3])))
polygon(c(all_dat$start,rev(all_dat$start)),c(prd[,2],rev(prd[,3])), col="grey80",border=NULL,lty="blank")
polygon(c(all_dat$start,rev(all_dat$start)),c(cnf[,2],rev(cnf[,3])), col="grey60",border=NULL,lty="blank")
lines(start_dat$start,start_dat$cats,type='l',col=rgb(0,0,1,0.6),pch=20)
abline(v=mid)
lines(end_dat$start,end_dat$cats,type="l",lty=2,col=rgb(0,0,1,0.6),pch=20)
##Creates a plot
plot(cats~start,data=start_dat,type='n',xlim=range(all_dat$start),ylim=c(min(prd[,2]),max(prd[,3])))
polygon(c(all_dat$start,rev(all_dat$start)),c(prd[,2],rev(prd[,3])), col="grey80",border=NULL,lty="blank")
polygon(c(all_dat$start,rev(all_dat$start)),c(cnf[,2],rev(cnf[,3])), col="grey60",border=NULL,lty="blank")
lines(start_dat$start,start_dat$cats,type='l',col=rgb(0,0,1,0.8),lwd=1.5)
abline(v=mid)
lines(end_dat$start,end_dat$cats,type="l",lty=2,col=rgb(0,0,1,0.8),pch=20)
plot(cats~start,data=start_dat,type='n',xlim=range(all_dat$start),
xlab="Time",ylab="Search Freqency",ylim=c(min(prd[,2]),max(prd[,3])))
polygon(c(all_dat$start,rev(all_dat$start)),c(prd[,2],rev(prd[,3])), col="grey80",border=NULL,lty="blank")
polygon(c(all_dat$start,rev(all_dat$start)),c(cnf[,2],rev(cnf[,3])), col="grey60",border=NULL,lty="blank")
lines(start_dat$start,start_dat$cats,type='l',col=rgb(0,0,1,0.8),lwd=1.5)
abline(v=mid)
lines(end_dat$start,end_dat$cats,type="l",lty=2,col=rgb(0,0,1,0.8),pch=20)
library(shiny)
runApp()
?residuals
##Gets data from Google
data <- reactive({ngram(as.character(input$term),corpus="eng_2012",year_end=2012,smoothing=0)})
##Takes inputs from the date range input.
year_start <- reactive({input$start})
year_end <- reactive({input$end})
##Subsets the data.
data2 <- data()[data()$Year>=year_start() & data()$Year<=year_end(),]
##Performs the regression
model <- lm(data2$Frequency~data2$Year)
##Comutes the ACF function for the residuals.
resid <- residuals(model,type="response")
library(ngramr)
data <- ngram(as.character("climate"),corpus="eng_2012",year_end=2012,smoothing=0)
##Takes inputs from the date range input.
year_start <- reactive({input$start})
year_end <- reactive({input$end})
##Subsets the data.
data2 <- data()[data()$Year>=year_start() & data()$Year<=year_end(),]
##Performs the regression
model <- lm(data2$Frequency~data2$Year)
##Comutes the ACF function for the residuals.
resid <- residuals(model,type="response")
data2 <- data[data$Year>=year_start & data$Year<=year_end,]
runApp()
runApp()
resid
runApp()
data
resid <- residuals(model)
resid
plot(resid~data2$Year)
data2
plot(resid~data$Year)
plot(resid~data2$Resid)
runApp()
data
model <- lm(data2$Frequency~data2$Year)
model <- lm(data$Frequency~data$Year)
resid <- residuals(model)
resid
plot(resid,data$Year)
plot(data$Year,resid)
plot(data$Year)
runApp()
runApp()
plot(data2)
data2
str(data2)
str(resdi)
str(resid
()
)
str(resid)
plot(data2$Year,resid,type="l")
q
runApp()
runApp()
runApp()
input$options
input
str(inpu)
str(input)
runApp()
str(input)
str(input$options)
input
runApp()
model
str(summary(model))
summary(model)$coefficients
tab <- summary(model)$coefficients
tab
tab <- xtable(summary(model)$coefficients)
library(xtable)
tab <- xtable(summary(model)$coefficients)
tab
runApp()
runApp()
data
data3 <- data[c(rep(FALSE,3),TRUE)]
dim(data3)
data3 <- data[c(rep(FALSE,3),TRUE),]
dim(data3)
data3 <- data[c(rep(FALSE,4),TRUE),]
data3 <- data[c(rep(FALSE,5),TRUE),]
data3 <- data[c(rep(FALSE,6),TRUE),]
runApp()
runApp()
runApp()
