{
    "contents" : "\n##Reads in the data and converts it to a date format.\ndata <- read.csv('report.csv',skip=4,nrows=500)\ndata$Week <- as.character(data$Week)\nweeks <- matrix(unlist(strsplit(data$Week,split=\" - \"),recursive=F),byrow=T,ncol=2)\ndata <- data.frame(data,start=weeks[,1],end=weeks[,2])\ndata$start <- as.Date(as.character(data$start))\ndata$end <- as.Date(as.character(data$end))\n\n##Subsets the data.\nstart <- as.Date(\"2006-01-01\")\nend <- as.Date(\"2008-01-01\")\nmid <- as.Date(\"2007-01-01\")\n\nstart_dat <- data[data$start>=start&data$start<=mid,]\nend_dat <- data[data$start>=mid&data$start<=end,]\nall_dat <- data[data$start>=start&data$start<=end,]\n\n##Adds a trend line to the plot.\nmodel <- lm(cats~start,data=start_dat)\n\n##Adds the confidence and predictive interval to the dataset.\nprd <- predict(model,newdata=all_dat,interval=\"prediction\",level=0.95,type=\"response\")\ncnf <- predict(model,newdata=all_dat,interval=\"confidence\",level=0.95,type=\"response\")\n\n##Creates a plot\nplot(cats~start,data=start_dat,type='n',xlim=range(all_dat$start),\n     xlab=\"Time\",ylab=\"Search Freqency\",ylim=c(min(prd[,2]),max(prd[,3])))\n\npolygon(c(all_dat$start,rev(all_dat$start)),c(prd[,2],rev(prd[,3])), col=\"grey80\",border=NULL,lty=\"blank\")\npolygon(c(all_dat$start,rev(all_dat$start)),c(cnf[,2],rev(cnf[,3])), col=\"grey60\",border=NULL,lty=\"blank\")\nlines(start_dat$start,start_dat$cats,type='l',col=rgb(0,0,1,0.8),lwd=1.5)\nabline(v=mid)\nlines(end_dat$start,end_dat$cats,type=\"l\",lty=2,col=rgb(0,0,1,0.8),pch=20)\n\n\n##Fits an ols model with lag1.\ndata2$cats_lag1 <- c(NA,data2$cats[1:length(data2$cats)-1])\nmodel2 <- lm(cats~cats_lag1 + start,data=data2)\nprd2 <- predict(model2,newdata=data2,interval=\"prediction\",level=0.95,type=\"response\")\n##sets all of the lags to the mean.\ndata3 <- data2\ndata3$cats_lag1 <- mean(data2$cats_lag1,na.rm=T)\ncnf2 <- predict(model2,newdata=data3,interval=\"confidence\",level=0.95,type=\"response\")\n\n#polygon(c(data2$start,rev(data2$start)),c(prd2[,2],rev(prd2[,3])), col=\"grey80\",border=NULL,lty=\"blank\")\npolygon(c(data2$start,rev(data2$start)),c(cnf2[,2],rev(cnf2[,3])), col=rgb(0.8,0.8,0.5,0.5),border=NULL,lty=\"blank\")\nlines(data2$start,data2$cats,type='l',col=\"blue\")\nabline(model2,lty=2)\n\n##Computes the autocorrelation function for the subset.\nacf(model$residuals)\n\n##Fits an AR1 model using generalized least squares.\nmodel3 <- gls(cats~start,data=data2,correlation=corARMA(p=1))\nprd <- predictSE.gls(model3,newdata=data2,se.fit=T)\n##Converts it to a time-series.\ndata_ts <- ts(data2$cats,frequency=52,start=start)\n\n##Fits an autoregressive model.\nmodel_ar <- ar(data_ts)\nprd_ar <- predict(model_ar,newdata=data2$start,n.ahead=5)\ncnf_ar <- predict(model_ar,newdata=data2$start,se.fit=T,n.ahead=5)\n\nmodel3 <- dynlm(data_ts~lag(data_ts,-1)+trend(data_ts))\n",
    "created" : 1383760047562.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3890052773",
    "id" : "4836A58B",
    "lastKnownWriteTime" : 1383779811,
    "path" : "~/Dropbox/Admin/STATMOS_RA/coding_scribbles.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}